# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""

import pylab as pl
import numpy as np
import string
import ast
import sys

#%matplotlib auto

s1 = '''(-283.500000, 1300.000000) (283.500000, 1300.000000) (283.500000, 424.062000) (-283.500000, 424.062000) 
(-79.000000, 409.000000) (79.000000, 409.000000) (79.000000, -95.000000) (-79.000000, -95.000000) 
(-79.000000, 425.062000) (79.000000, 425.062000) (79.000000, 69.062000) (-79.000000, 69.062000) 
(-1973.876789, -283.500000) (-1973.876789, 283.500000) (-1097.938789, 283.500000) (-1097.938789, -283.500000) 
(-1001.307846, -79.000000) (-1001.307846, 79.000000) (-497.307846, 79.000000) (-497.307846, -79.000000) 
(-1098.938789, -79.000000) (-1098.938789, 79.000000) (-742.938789, 79.000000) (-742.938789, -79.000000) 
(283.500000, -1768.662979) (-283.500000, -1768.662979) (-283.500000, -892.724979) (283.500000, -892.724979) 
(79.000000, -835.453120) (-79.000000, -835.453120) (-79.000000, -331.453120) (79.000000, -331.453120) 
(79.000000, -893.724979) (-79.000000, -893.724979) (-79.000000, -537.724979) (79.000000, -537.724979) 
(1923.534331, -79.046390) (1576.614074, -527.527533) (883.771613, 8.417151) (1230.691870, 456.898294) 
(964.151740, 404.536383) (867.479076, 279.562802) (468.829171, 587.936363) (565.501835, 712.909944) 
(1106.359045, 294.532661) (1009.686381, 169.559080) (728.100337, 387.378500) (824.773001, 512.352081)  
'''

s2 = '''(-283.500000, 1420.040000) (283.500000, 1420.040000) (283.500000, 544.102000) (-283.500000, 544.102000) 
(-79.000000, 409.000000) (79.000000, 409.000000) (79.000000, -95.000000) (-79.000000, -95.000000) 
(-79.000000, 545.102000) (79.000000, 545.102000) (79.000000, 189.102000) (-79.000000, 189.102000) 
(-2168.573600, -283.500000) (-2168.573600, 283.500000) (-1292.635600, 283.500000) (-1292.635600, -283.500000) 
(-1038.640593, -79.000000) (-1038.640593, 79.000000) (-534.640593, 79.000000) (-534.640593, -79.000000) 
(-1293.635600, -79.000000) (-1293.635600, 79.000000) (-937.635600, 79.000000) (-937.635600, -79.000000) 
(283.500000, -1934.543241) (-283.500000, -1934.543241) (-283.500000, -1058.605241) (283.500000, -1058.605241) 
(79.000000, -862.332160) (-79.000000, -862.332160) (-79.000000, -358.332160) (79.000000, -358.332160) 
(79.000000, -1059.605241) (-79.000000, -1059.605241) (-79.000000, -703.605241) (79.000000, -703.605241) 
(2072.006350, -242.479027) (1701.204367, -671.425282) (1038.540656, -98.586574) (1409.342639, 330.359681) 
(990.720619, 421.919811) (887.393082, 302.389814) (506.107522, 631.991577) (609.435059, 751.521574) 
(1276.361934, 174.997580) (1173.034398, 55.467583) (903.713645, 288.281527) (1007.041182, 407.811524)
'''

#%%

def probeplot(s):
    rad = 1358
    ang =  np.radians(np.arange(361))
    fig, ax = pl.subplots(1,figsize=(12,12))
    pl.plot(rad * np.cos(ang),rad * np.sin(ang))
    pl.plot( [rad, 0 , -rad, 0], [0, rad, 0, -rad],'o')   
    points = []
    for line in s.split('\n'):
        if len(line) == 0:
            continue
        print(line)
        new = '('+line.replace(') (','),(') + ')'
        x = np.asarray(ast.literal_eval(new))
        x = np.append(x,[x[0]],axis=0)
        points.append(x)
        if len(points)%3==0:
            print(points[-1][2], points[-2][2], np.linalg.norm(points[-1][2]-points[-2][2]))
        pl.plot(x[:,0],x[:,1])
    ax.set_aspect('equal','datalim')
    pl.show()


#probeplot(s1)
#probeplot(s2)

while 1:
    lines = ""
    for i in range(12):
        lines = lines + sys.stdin.readline()
    if sys.argv[1] == "m3":
        lines = lines + sys.stdin.readline()
    probeplot(lines)
        
